-- Create Database and Use
CREATE DATABASE hotel_reservation_system_final;
USE hotel_reservation_system_final;

-- Users Table
CREATE TABLE Users (
    UserID INT PRIMARY KEY AUTO_INCREMENT,
    FullName VARCHAR(255) NOT NULL,
    Email VARCHAR(255) UNIQUE NOT NULL,
    PasswordHash VARCHAR(255) NOT NULL,
    UserType ENUM('Customer', 'Staff', 'Admin') NOT NULL,
    PhoneNumber VARCHAR(20),
    Address VARCHAR(255),
    CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Rooms Table
CREATE TABLE Rooms (
    RoomID INT PRIMARY KEY AUTO_INCREMENT,
    RoomNumber VARCHAR(50) UNIQUE NOT NULL,
    RoomType VARCHAR(100) NOT NULL,
    Description TEXT,
    BasePrice DECIMAL(10, 2) NOT NULL,
    AvailabilityStatus ENUM('Available', 'Occupied', 'Maintenance') DEFAULT 'Available',
    CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Bookings Table
CREATE TABLE Bookings (
    BookingID INT PRIMARY KEY AUTO_INCREMENT,
    UserID INT,
    RoomID INT,
    CheckInDate DATE NOT NULL,
    CheckOutDate DATE NOT NULL,
    NumberOfGuests INT,
    BookingStatus ENUM('Pending', 'Confirmed', 'Cancelled', 'Completed') DEFAULT 'Pending',
    CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (UserID) REFERENCES Users(UserID),
    FOREIGN KEY (RoomID) REFERENCES Rooms(RoomID)
);

-- Packages Table
CREATE TABLE Packages (
    PackageID INT PRIMARY KEY AUTO_INCREMENT,
    PackageName VARCHAR(255) NOT NULL,
    Description TEXT,
    Price DECIMAL(10, 2) NOT NULL,
    CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- BookingPackages (Many-to-Many relationship between Bookings and Packages)
CREATE TABLE BookingPackages (
    BookingID INT,
    PackageID INT,
    PRIMARY KEY (BookingID, PackageID),
    FOREIGN KEY (BookingID) REFERENCES Bookings(BookingID),
    FOREIGN KEY (PackageID) REFERENCES Packages(PackageID)
);

-- ServiceRequests Table
CREATE TABLE ServiceRequests (
    RequestID INT PRIMARY KEY AUTO_INCREMENT,
    BookingID INT,
    UserID INT,
    RequestType VARCHAR(255) NOT NULL,
    Description TEXT,
    Status ENUM('Pending', 'Assigned', 'Completed') DEFAULT 'Pending',
    CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (BookingID) REFERENCES Bookings(BookingID),
    FOREIGN KEY (UserID) REFERENCES Users(UserID)
);

-- StaffSchedule Table
CREATE TABLE StaffSchedule (
    ScheduleID INT PRIMARY KEY AUTO_INCREMENT,
    UserID INT,
    ScheduleDate DATE NOT NULL,
    StartTime TIME,
    EndTime TIME,
    FOREIGN KEY (UserID) REFERENCES Users(UserID)
);

-- AssignedTasks Table
CREATE TABLE AssignedTasks (
    TaskID INT PRIMARY KEY AUTO_INCREMENT,
    RequestID INT,
    StaffID INT,
    AssignmentDateTime TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    TaskStatus ENUM('Pending', 'InProgress', 'Completed') DEFAULT 'Pending',
    FOREIGN KEY (RequestID) REFERENCES ServiceRequests(RequestID),
    FOREIGN KEY (StaffID) REFERENCES Users(UserID)
);